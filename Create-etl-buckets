Parameters:
  BucketName:
    Description: >-
      The name of the bucket. Should include the name of the account per Cloud
      COE standards (e.g. imbigdata-prod-acxiom). The template will add the
      appropriate suffix to this name (-external-bucket and -landing-bucket)
    Type: String
  ExternalUsername:
    Description: >-
      The username that the 3rd party will use to transfer files to the external
      bucket
    Type: String
Resources:
  BucketExternal:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Ref ExternalKey
              SSEAlgorithm: 'aws:kms'
      BucketName: !Join 
        - ''
        - - !Ref BucketName
          - '-external-bucket'
      AccessControl: Private
  BucketLanding:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Ref InternalKey
              SSEAlgorithm: 'aws:kms'
      BucketName: !Join 
        - ''
        - - !Ref BucketName
          - '-landing-bucket'
      AccessControl: Private
  BucketPolicyExternal:
    Type: 'AWS::S3::BucketPolicy'
    DependsOn: ExternalToLandingRole
    Properties:
      PolicyDocument:
        Id: Policy
        Version: 2012-10-17
        Statement:
          - Sid: ReadAccess
            Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref BucketExternal
                - /*
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:role/ACCOUNTADMIN'
                - !GetAtt 
                  - ExternalToLandingRole
                  - Arn
          - Sid: WriteAccess
            Action:
              - 's3:PutObject'
              - 's3:List*'
            Effect: Allow
            Resource:
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref BucketExternal
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref BucketExternal
                  - /*
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:role/ACCOUNTADMIN'
                - !Join 
                  - ''
                  - - !Sub 'arn:aws:iam::${AWS::AccountId}:user/'
                    - !Ref ExternalUsername
      Bucket: !Ref BucketExternal
  BucketPolicyLanding:
    Type: 'AWS::S3::BucketPolicy'
    DependsOn: ExternalToLandingRole
    Properties:
      PolicyDocument:
        Id: Policy
        Version: 2012-10-17
        Statement:
          - Sid: WriteAccess
            Action:
              - 's3:List*'
              - 's3:PutObject'
            Effect: Allow
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref BucketLanding
                - /*
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:role/ACCOUNTADMIN'
                - !GetAtt 
                  - ExternalToLandingRole
                  - Arn
      Bucket: !Ref BucketLanding
  ExternalToLandingRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2008-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      RoleName: !Join 
        - ''
        - - !Ref 'AWS::Region'
          - _
          - !Ref BucketName
          - _External_To_Landing
  ExternalKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Join 
        - ''
        - - 'alias/'
          - !Ref BucketName
          - '-external-key'
      TargetKeyId: !Ref ExternalKey
  ExternalKey:
    Type: 'AWS::KMS::Key'
    Properties:
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-cloudformation-policy
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow access for Key Administrators
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:role/ACCOUNTADMIN'
            Action:
              - 'kms:Create*'
              - 'kms:Describe*'
              - 'kms:Enable*'
              - 'kms:List*'
              - 'kms:Put*'
              - 'kms:Update*'
              - 'kms:Revoke*'
              - 'kms:Disable*'
              - 'kms:Get*'
              - 'kms:Delete*'
              - 'kms:TagResource'
              - 'kms:UntagResource'
              - 'kms:ScheduleKeyDeletion'
              - 'kms:CancelKeyDeletion'
            Resource: '*'
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              AWS: 
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/ACCOUNTADMIN'
              - !Join 
                - ''
                - - !Sub 'arn:aws:iam::${AWS::AccountId}:user/'
                  - !Ref ExternalUsername
            Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey*'
              - 'kms:DescribeKey'
            Resource: '*'
          - Sid: Allow attachment of persistent resources
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:role/ACCOUNTADMIN'
            Action:
              - 'kms:CreateGrant'
              - 'kms:ListGrants'
              - 'kms:RevokeGrant'
            Resource: '*'
            Condition:
              Bool:
                'kms:GrantIsForAWSResource': 'true'
  InternalKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Join 
        - ''
        - - 'alias/'
          - !Ref BucketName
          - '-internal-key'
      TargetKeyId: !Ref InternalKey
  InternalKey:
    Type: 'AWS::KMS::Key'
    Properties:
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-cloudformation-policy
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow access for Key Administrators
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:role/ACCOUNTADMIN'
            Action:
              - 'kms:Create*'
              - 'kms:Describe*'
              - 'kms:Enable*'
              - 'kms:List*'
              - 'kms:Put*'
              - 'kms:Update*'
              - 'kms:Revoke*'
              - 'kms:Disable*'
              - 'kms:Get*'
              - 'kms:Delete*'
              - 'kms:TagResource'
              - 'kms:UntagResource'
              - 'kms:ScheduleKeyDeletion'
              - 'kms:CancelKeyDeletion'
            Resource: '*'
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:role/ACCOUNTADMIN'
            Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey*'
              - 'kms:DescribeKey'
            Resource: '*'
          - Sid: Allow attachment of persistent resources
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:role/ACCOUNTADMIN'
            Action:
              - 'kms:CreateGrant'
              - 'kms:ListGrants'
              - 'kms:RevokeGrant'
            Resource: '*'
            Condition:
              Bool:
                'kms:GrantIsForAWSResource': 'true'
